package components

import (
	"encoding/json"
	"github.com/invopop/ctxi18n/i18n"
	"github.com/jackc/pgx/v5/pgtype"
	"roommates/db/dbqueries"
	"roommates/globals"
	"roommates/locales"
	"roommates/models"
	"roommates/utils"
	"strings"
)

templ houseAside(houses []dbqueries.UserHousesRow) {
	<aside class="max-md:hidden p-4 space-y-6">
		<div>
			@houseModal(EOpener)
		</div>
		if len(houses) > 0 {
			<div>
				<h4 class="uk-h4">
					{ utils.T(ctx, locales.LKHousesYourHouses, "Your Houses") }
				</h4>
				<ul class="uk-list uk-list-disc mt-4">
					for _, house := range houses {
						<li>
							<a
								href={ globals.RHouses + "/" + house.ID.String() }
								class="uk-btn uk-btn-text"
							>
								{ house.Name }
							</a>
						</li>
					}
				</ul>
			</div>
		}
	</aside>
}

// EOpener is meant for use in the aside menu and is for a new house
templ houseModal(element ElementType) {
	switch element {
		case EOpener:
			<a
				class="uk-btn uk-btn-default w-full"
				href={ "#" + HfModalId }
				data-uk-toggle
				{ AtrHtmxGetHouseForm... }
			>
				{ utils.T(ctx, locales.LKFormsHouseTitleNew, "New House") }
			</a>
		case EModal:
			<div id={ HfModalId } class="uk-flex-top uk-modal" data-uk-modal>
				<div class="uk-modal-dialog uk-modal-body uk-margin-auto-vertical overflow-visible">
					@HouseForm(models.House{})
				</div>
			</div>
		default:
			NOT IMPLEMENTED ({ element }) -- { utils.GetFileAndLine() }
	}
}

templ HouseCardUserLink(userID pgtype.UUID, username string) {
	{{ url := strings.ReplaceAll(globals.RHtmxUsername, ":id", userID.String()) }}
	<a href={ url } { AtrHtmxPageSwap... }>
		{ username }
	</a>
}

templ houseCardUserBadge(userIds []pgtype.UUID) {
	<span class="uk-badge">
		{ utils.N(ctx, locales.LKHousesRoomateCount, len(userIds), i18n.M{"count": len(userIds)}) }
	</span>
	<div
		class="uk-drop uk-dropdown min-w-52"
		data-uk-dropdown="animation: uk-anmt-slide-top-sm"
	>
		<ul class="uk-nav uk-dropdown-nav">
			for _, userID := range userIds {
				{{ url := strings.ReplaceAll(globals.RHtmxUsername, ":id", userID.String()) }}
				<li>
					// TODO: when htmx trigger on visible becomes then maybe change to that
					// current way is fine
					<a
						hx-get={ url }
						hx-trigger="revealed"
						hx-target="this"
						hx-swap="outerHTML"
					>
						// htmx is expected to replace this
						UNDEFINED
					</a>
				</li>
			}
		</ul>
	</div>
}

templ houseCard(house dbqueries.UserHousesRow) {
	<div
		class="uk-card uk-card-body space-y-4"
	>
		<h3 class="uk-card-title">
			<a
				href={ globals.RHouses + "/" + house.ID.String() }
				{ AtrHtmxPageSwap... }
			>
				{ house.Name }
			</a>
		</h3>
		@houseCardUserBadge(house.UserIds)
		// <div class="uk-card-body"></div>
		<div class="uk-card-footer flex justify-center">
			{{
				hValsData, _ := json.Marshal(map[string]string{
					"house_id": house.ID.String(),
				})
			}}
			<button
				class="uk-btn uk-btn-primary"
				data-uk-toggle={ "target: #" + HfModalId }
				{ AtrHtmxGetHouseForm... }
				hx-vals={ string(hValsData) }
			>
				{ utils.T(ctx, locales.LKFormsEdit, "EDIT") }
			</button>
		</div>
	</div>
}
